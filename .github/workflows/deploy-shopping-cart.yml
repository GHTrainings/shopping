# GitHub Actions workflow for deploying both frontend (Angular) and backend (.NET) to Azure App Service

name: Deploy Shopping Cart App to Azure

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  
jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore ./backend/backend.csproj

      - name: Build
        run: dotnet build ./backend/backend.csproj --configuration Release --no-restore

      - name: Publish
        run: dotnet publish ./backend/backend.csproj --configuration Release --output ./publish

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.BACKEND_APP_NAME }}
          package: ./publish

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm ci --prefix frontend

      - name: Build Angular app
        run: npm run build --prefix frontend

      - name: Move browser files to dist
        run: |
          cp -r frontend/dist/frontend/browser/* frontend/dist/frontend/

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.FRONTEND_APP_NAME }}
          package: frontend/dist/frontend
